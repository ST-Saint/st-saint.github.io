#+TITLE: Native Emacs
#+tags[]: emacs
#+date: Fri, 25 Feb 2022 23:31:11 +0800
#+lastmod: Fri, 25 Feb 2022 23:31:11 +0800

* align
+ 第一次知道 =C-u M-x= 调用的命令跟直接 =M-x= 调用的还是不一样的
+ =C-u M-x align-regexp= 使用的是更高级的 =align-regexp=
  + *regexp*: match the place you are interested in aligning; to do it, one of its parenthesis groups will be extended with spaces, or shortened by deleting characters
  + *parenthesis* group: choose which one
  + *spacing*: if the group is shorter than this, spaces will be added to it; if it's longer, characters will be deleted from it, starting at the end (unless it's longer for the purposes of alignment, of course)
  + *repeat*: well, this is obvious, I think
  + *justify*: non-blank characters inside the group won't be deleted, and necessary spaces will be added/deleted from the left. On your second case, try: regexp \([0-9]+\), group -1.
  + *column* (instead of spacing): align to that fixed column (of course, it doesn't work well with “repeat”).

* GPG
#+begin_quote
 keeping your secrets encrypted on your file system is an easy way of keeping your secrets secret
#+end_quote

+ Gpg(GNU Privacy Guard) is natively supported in emacs called EasyPG
+ 只用一个gpg key管理所有加密文件和链接
+ 可以不用每次输密码获取 root 权限

** authinfo
+ =auth-sources= 变量指定 authinfo 文件
+ 格式 =machine <HOST> login <ACCOUNT> port <PORT> password <PASSWORD>=
  + example =machine localhost login root port sudo password rootpasswd123=
** Creating a key
+ =gpg --gen-key=

** [[https://wiki.archlinux.org/title/GnuPG#Cache_passwords][cache password]]
