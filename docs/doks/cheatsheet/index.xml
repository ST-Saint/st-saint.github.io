<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CheatSheet on</title><link>https://st-saint.github.io/doks/cheatsheet/</link><description>Recent content in CheatSheet on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Wed, 23 Feb 2022 15:39:52 +0800</lastBuildDate><atom:link href="https://st-saint.github.io/doks/cheatsheet/index.xml" rel="self" type="application/rss+xml"/><item><title>Org Cheat Shell</title><link>https://st-saint.github.io/doks/cheatsheet/org/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://st-saint.github.io/doks/cheatsheet/org/</guid><description>configuration # reveal.js #+REVEAL_THEME: Serif all #+OPTIONS: broken-links:t \n:t #+LATEX_HEADER: \hypersetup{colorlinks=true,linkcolor=black} #+SETUPFILE: /home/yayu/org/org-html-themes/org/theme-readtheorg-local.setup 连接
#+OPTIONS: broken-links:t \n:t 换行
#+OPTIONS: \n:t TOC 颜色
#+LATEX_HEADER: \hypersetup{colorlinks=true,linkcolor=black} HTML theme
#+SETUPFILE: /home/yayu/org/org-html-themes/org/theme-readtheorg-local.setup fonts # Emphasis and Monospace # bold italic underlined verbatim code strike-through open # 快速打开文件
(&amp;quot;&amp;lt;SPC&amp;gt; n f&amp;quot; '+default/find-in-notes) capture # capture 文件位置加入 org 文档 (&amp;quot;&amp;lt;SPC&amp;gt; X&amp;quot; 'org-capture) (&amp;quot;C-c C-w&amp;quot; 'refile) capture
link # 插入链接 # (&amp;quot;&amp;lt;SPC&amp;gt; m l l&amp;quot; 'org-insert-link) 编辑连接 # (&amp;quot;C-c '&amp;quot; 'org-edit-special) (&amp;quot;C-C C-l&amp;quot; 'org-insert-link) 图片 # 调整图片大小 #+attr_html: :width 1000px Code Snippet # edit # 进入模式编辑</description></item><item><title>Linux Cheat Sheet</title><link>https://st-saint.github.io/doks/cheatsheet/linux/linux/</link><pubDate>Wed, 23 Feb 2022 15:39:52 +0800</pubDate><guid>https://st-saint.github.io/doks/cheatsheet/linux/linux/</guid><description>shell for loop for it in $array; do done time date &amp;#34;+%F %H:%M:%S.%N&amp;#34; copy to clipboard echo &amp;#34;&amp;#34; | xclip -set clip sort options -k [n, m] 选择区间 -t g分隔符 -M 排序月份 -n 以数值型进行排序 -h 可读的数字(带单位) -f 忽略大小写 example tmux config unbind C-b set-option -g prefix M-Space bind-key M-Space send-prefix set -g default-terminal screen-256color set-option -ga terminal-overrides &amp;#34;,*256col*:Tc&amp;#34; options start tmux new -s *SESSION_NAME* attach tmux a -t *SESSION_NAME* detach send-prefix d create window send-prefix c jobs list background process jobs condition 中括号 单中括号 [ ] 两个符号左右都要有空格分隔 内部操作符与操作变量之间要有空格：如 [ &amp;#34;a&amp;#34; = &amp;#34;b&amp;#34; ] 字符串比较中，&amp;gt; &amp;lt; 需要写成&amp;gt; \&amp;lt; 进行转义 中字符串或者${}变量尽量使用&amp;#34;&amp;#34;双引号扩住，以避免值未定义引用而出错 中可以使用 –a –o 进行逻辑运算 是 shell 内置命令 双中括号 [[ ]] 两个符号左右都要有空格分隔 [[ ]] 内部操作符与操作变量之间要有空格：如 [[ &amp;#34;a&amp;#34; = &amp;#34;b&amp;#34; ]] [[ ]] 字符串比较中，可以直接使用 &amp;gt; &amp;lt; 无需转义 [[ ]] 中字符串或者${}变量尽量使用&amp;#34;&amp;#34; 双引号扩住，如未使用&amp;#34;&amp;#34;会进行模式和元字符匹配 [[ ]] 内部可以使用 &amp;amp;&amp;amp; || 进行逻辑运算 [[ ]] 是 bash keyword 文件夹或文件 存在 文件夹 if [ !</description></item></channel></rss>