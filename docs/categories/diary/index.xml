<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>diary on Yayu Wang</title>
    <link>https://st-saint.github.io/categories/diary/</link>
    <description>Recent content in diary on Yayu Wang</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 01 Feb 2022 22:14:25 +0800</lastBuildDate><atom:link href="https://st-saint.github.io/categories/diary/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hashmap</title>
      <link>https://st-saint.github.io/posts/diary/hashmap/</link>
      <pubDate>Tue, 01 Feb 2022 22:14:25 +0800</pubDate>
      
      <guid>https://st-saint.github.io/posts/diary/hashmap/</guid>
      <description>一般都说 hashmap 复杂度O(1), 感觉应该不完全是
  研究一下
  Werid things    容易想到如果有无限大数组, 直接当作桶对 object 取 hash, 期望不会 collide 就行
  显然没有无限大内存，怎么做 index
    Java implement    实现是 hash_array (length: n to the pow of 2)
  处理 collision
  linkedlist
  R-B tree
      Index    index map 的话, length 是 2 的幂次, hash 值直接取后n位, 作为 array 的 index</description>
    </item>
    
  </channel>
</rss>
