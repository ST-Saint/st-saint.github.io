<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CheatSheet on </title>
    <link>https://st-saint.github.io/doks/cheatsheet/</link>
    <description>Recent content in CheatSheet on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 06 Oct 2020 08:48:57 +0000</lastBuildDate><atom:link href="https://st-saint.github.io/doks/cheatsheet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Org Cheat Shell</title>
      <link>https://st-saint.github.io/doks/cheatsheet/org/</link>
      <pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate>
      
      <guid>https://st-saint.github.io/doks/cheatsheet/org/</guid>
      <description>configuration #  reveal.js   #+REVEAL_THEME: Serif   all   #+OPTIONS: broken-links:t \n:t #+LATEX_HEADER: \hypersetup{colorlinks=true,linkcolor=black} #+SETUPFILE: /home/yayu/org/org-html-themes/org/theme-readtheorg-local.setup    连接
#+OPTIONS: broken-links:t \n:t    换行
#+OPTIONS: \n:t    TOC 颜色
#+LATEX_HEADER: \hypersetup{colorlinks=true,linkcolor=black}    HTML theme
#+SETUPFILE: /home/yayu/org/org-html-themes/org/theme-readtheorg-local.setup    fonts # Emphasis and Monospace #  bold italic underlined verbatim code strike-through  open #   快速打开文件
(&amp;quot;&amp;lt;SPC&amp;gt; n f&amp;quot; &#39;+default/find-in-notes)    capture #  capture 文件位置加入 org 文档   (&amp;quot;&amp;lt;SPC&amp;gt; X&amp;quot; &#39;org-capture) (&amp;quot;C-c C-w&amp;quot; &#39;refile)  capture</description>
    </item>
    
    <item>
      <title>Linux Cheat Sheet</title>
      <link>https://st-saint.github.io/doks/cheatsheet/linux/linux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://st-saint.github.io/doks/cheatsheet/linux/linux/</guid>
      <description>shell # find files # find ./fuzz-results/crashes -type f -name &amp;quot;id:$1*&amp;quot; -print0 | while read -d $&#39;\0&#39; file do echo $file done  xargs # 多行转单行输入, 默认分隔符为换行
pacman -Q | grep -i &amp;quot;haskell&amp;quot; | xargs sudo pacman -S --noconfirm  placeholder
xargs -I {} mv dir1/{} dir2/{} xargs -I &#39;{}&#39; mv dir1/&#39;{}&#39; dir2/&#39;{}&#39;  stream #    symbol meanings     0 stdin   1 stdout   2 stderr   2&amp;gt;&amp;amp;1 stderr to stdout   1&amp;gt; stdout redirect   2&amp;gt; stderr redirect   1&amp;gt;/dev/null write to void    uniq # 仅输出 unique 行</description>
    </item>
    
    <item>
      <title>Shell Cheat Sheet</title>
      <link>https://st-saint.github.io/doks/cheatsheet/shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://st-saint.github.io/doks/cheatsheet/shell/</guid>
      <description>循环 # for it in $array; do done  条件 # 中括号 # 单中括号 [ ] #  [ ] 两个符号左右都要有空格分隔 内部操作符与操作变量之间要有空格：如 [ &amp;ldquo;a&amp;rdquo; = &amp;ldquo;b&amp;rdquo; ] 字符串比较中，&amp;gt; &amp;lt; 需要写成&amp;gt; \&amp;lt; 进行转义 [ ] 中字符串或者${}变量尽量使用&amp;quot;&amp;ldquo;双引号扩住，以避免值未定义引用而出错 [ ] 中可以使用 –a –o 进行逻辑运算 [ ] 是 shell 内置命令  双中括号 #  [[ ]] 两个符号左右都要有空格分隔 [[ ]] 内部操作符与操作变量之间要有空格：如 [[ &amp;quot;a&amp;quot; = &amp;quot;b&amp;quot; ]] [[ ]] 字符串比较中，可以直接使用 &amp;gt; &amp;lt; 无需转义 [[ ]] 中字符串或者${}变量尽量使用&amp;rdquo;&amp;quot; 双引号扩住，如未使用&amp;quot;&amp;ldquo;会进行模式和元字符匹配 [[ ]] 内部可以使用 &amp;amp;&amp;amp; || 进行逻辑运算 [[ ]] 是 bash keyword  文件夹或文件 # 存在 #    文件夹</description>
    </item>
    
  </channel>
</rss>
