[{"content":"Intro We\u0026rsquo;ll be using yml/yaml format for all examples down below, I recommend using yml over toml as it is easier to read. You can find any YML to TOML converters if necessary. Guide Follow Quick Start guide to setup hugo and create a new site.\nNote: Use -f to select yml format\nhugo new site \u0026lt;name of site\u0026gt; -f yml\nMake sure you install latest version of hugo(\u0026gt;=0.83.0).\nAfter you have created a new site, at Step 3 follow the steps:\nMethod 1 Inside the folder of your Hugo site, run:\ngit clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 Note: You may use --branch v5.0 to end of above command if you want to stick to specific release.\nUpdating theme :\ncd themes/PaperMod git pull Method 2 you can use as submodule with\ngit submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod --depth=1 git submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically) Note: You may use --branch v5.0 to end of above command if you want to stick to specific release.\nUpdating theme :\ngit submodule update --remote --merge Method 3 Or you can Download as Zip from Github Page and extract in your themes directory\nDirect Links:\nMaster Branch (Latest) v5.0 v4.0 v3.0 v2.0 v1.0 Finally \u0026hellip; Add in config.yml:\ntheme: \u0026quot;PaperMod\u0026quot; Quick Links Papermod - Features Papermod - FAQs Papermod - Variables Papermod - Icons ChangeLog Sample config.yml Example Site Structure is present here: exampleSite\nUse appropriately\nbaseURL: \u0026quot;https://examplesite.com/\u0026quot; title: ExampleSite paginate: 5 theme: PaperMod enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false googleAnalytics: UA-123-45 minify: disableXML: true minifyOutput: true params: env: production # to enable google analytics, opengraph, twitter-cards and schema. title: ExampleSite description: \u0026quot;ExampleSite description\u0026quot; keywords: [Blog, Portfolio, PaperMod] author: Me # author: [\u0026quot;Me\u0026quot;, \u0026quot;You\u0026quot;] # multiple authors images: [\u0026quot;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026quot;] DateFormat: \u0026quot;January 2, 2006\u0026quot; defaultTheme: auto # dark, light disableThemeToggle: false ShowReadingTime: true ShowShareButtons: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: false disableSpecial1stPost: false disableScrollToTop: false comments: false hidemeta: false hideSummary: false showtoc: false tocopen: false assets: # disableHLJS: true # to disable highlight.js # disableFingerprinting: true favicon: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; favicon16x16: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; favicon32x32: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; apple_touch_icon: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; safari_pinned_tab: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; label: text: \u0026quot;Home\u0026quot; icon: /apple-touch-icon.png iconHeight: 35 # profile-mode profileMode: enabled: false # needs to be explicitly set title: ExampleSite subtitle: \u0026quot;This is subtitle\u0026quot; imageUrl: \u0026quot;\u0026lt;img location\u0026gt;\u0026quot; imageWidth: 120 imageHeight: 120 imageTitle: my image buttons: - name: Posts url: posts - name: Tags url: tags # home-info mode homeInfoParams: Title: \u0026quot;Hi there \\U0001F44B\u0026quot; Content: Welcome to my blog socialIcons: - name: twitter url: \u0026quot;https://twitter.com/\u0026quot; - name: stackoverflow url: \u0026quot;https://stackoverflow.com\u0026quot; - name: github url: \u0026quot;https://github.com/\u0026quot; analytics: google: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; bing: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; yandex: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; cover: hidden: true # hide everywhere but not in structured data hiddenInList: true # hide on list pages and home hiddenInSingle: true # hide on single page editPost: URL: \u0026quot;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026quot; Text: \u0026quot;Suggest Changes\u0026quot; # edit text appendFilePath: true # to append file path to Edit link # for search # https://fusejs.io/api/options.html fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026quot;title\u0026quot;, \u0026quot;permalink\u0026quot;, \u0026quot;summary\u0026quot;, \u0026quot;content\u0026quot;] menu: main: - identifier: categories name: categories url: /categories/ weight: 10 - identifier: tags name: tags url: /tags/ weight: 20 - identifier: example name: example.org url: https://example.org weight: 30 # Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma # pygmentsUseClasses: true # markup: # highlight: # # anchorLineNos: true # codeFences: true # guessSyntax: true # lineNos: true # style: monokai Sample Page.md --- title: \u0026quot;My 1st post\u0026quot; date: 2020-09-15T11:30:03+00:00 # weight: 1 # aliases: [\u0026quot;/first\u0026quot;] tags: [\u0026quot;first\u0026quot;] author: \u0026quot;Me\u0026quot; # author: [\u0026quot;Me\u0026quot;, \u0026quot;You\u0026quot;] # multiple authors showToc: true TocOpen: false draft: false hidemeta: false comments: false description: \u0026quot;Desc Text.\u0026quot; canonicalURL: \u0026quot;https://canonical.url/to/page\u0026quot; disableHLJS: true # to disable highlightjs disableShare: false disableHLJS: false hideSummary: false searchHidden: true ShowReadingTime: true ShowBreadCrumbs: true ShowPostNavLinks: true cover: image: \u0026quot;\u0026lt;image path/url\u0026gt;\u0026quot; # image path/url alt: \u0026quot;\u0026lt;alt text\u0026gt;\u0026quot; # alt text caption: \u0026quot;\u0026lt;text\u0026gt;\u0026quot; # display caption under cover relative: false # when using page bundles set this to true hidden: true # only hide on current single page editPost: URL: \u0026quot;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026quot; Text: \u0026quot;Suggest Changes\u0026quot; # edit text appendFilePath: true # to append file path to Edit link --- You can use it by creating archetypes/post.md\nhugo new --kind post \u0026lt;name\u0026gt; ","permalink":"https://st-saint.github.io/posts/papermod/papermod-installation/","summary":"Read Install and Update instructions here","title":"Installation | Update"},{"content":"Intro We\u0026rsquo;ll be using yml/yaml format for all examples down below, I recommend using yml over toml as it is easier to read.\nYou can find any YML to TOML converters if necessary.\nAssets (js/css) The following is enabled by default\nminification - makes the assets size smallest as possible. bundling - bundles all the styles in one single asset fingerprint/integrity check. Default Theme light/dark/auto params: # defaultTheme: light # defaultTheme: dark defaultTheme: auto # to switch between dark or light according to browser theme Theme Switch Toggle (enabled by default) Shows icon besides title of page to change theme\nTo disable it :\ndisableThemeToggle: true You can refer following table for better understanding\u0026hellip;\ndefaultTheme disableThemeToggle checks local storage? checks system theme? Info auto true No Yes only system theme false Yes (if not-\u0026gt;2) Yes (2) switch present dark true No No force dark only false Yes No switch present light true No No force light only false Yes No switch present Archives Layout Create a page with archive.md in content directory with following content\n. ├── config.yml ├── content/ │ ├── archives.md \u0026lt;--- Create archive.md here │ └── posts/ ├── static/ └── themes/ └── PaperMod/ and add the following to it\n--- title: \u0026quot;Archive\u0026quot; layout: \u0026quot;archives\u0026quot; url: \u0026quot;/archives/\u0026quot; summary: archives --- Note: Archives Layout does not support Multilingual Month Translations.\nex: archives.md\nRegular Mode (default-mode) Home-Info Mode Use 1st entry as some Information\nadd following to config file\nparams: homeInfoParams: Title: Hi there wave Content: Can be Info, links, about... socialIcons: # optional - name: \u0026quot;\u0026lt;platform\u0026gt;\u0026quot; url: \u0026quot;\u0026lt;link\u0026gt;\u0026quot; - name: \u0026quot;\u0026lt;platform 2\u0026gt;\u0026quot; url: \u0026quot;\u0026lt;link2\u0026gt;\u0026quot; ex. config.yml#L106\nProfile Mode Shows Index/Home page as Full Page with Social Links and Image\nadd following to config file\nparams: profileMode: enabled: true title: \u0026quot;\u0026lt;Title\u0026gt;\u0026quot; # optional default will be site title subtitle: \u0026quot;This is subtitle\u0026quot; imageUrl: \u0026quot;\u0026lt;image link\u0026gt;\u0026quot; # optional imageTitle: \u0026quot;\u0026lt;title of image as alt\u0026gt;\u0026quot; # optional imageWidth: 120 # custom size imageHeight: 120 # custom size buttons: - name: Archive url: \u0026quot;/archive\u0026quot; - name: Github url: \u0026quot;https://github.com/\u0026quot; socialIcons: # optional - name: \u0026quot;\u0026lt;platform\u0026gt;\u0026quot; url: \u0026quot;\u0026lt;link\u0026gt;\u0026quot; - name: \u0026quot;\u0026lt;platform 2\u0026gt;\u0026quot; url: \u0026quot;\u0026lt;link2\u0026gt;\u0026quot; Search Page PaperMod uses Fuse.js Basic for seach functionality\nAdd the following to site config, config.yml\noutputs: home: - HTML - RSS - JSON # is necessary Create a page with search.md in content directory with following content\n--- title: \u0026quot;Search\u0026quot; # in any language you want layout: \u0026quot;search\u0026quot; # is necessary # url: \u0026quot;/archive\u0026quot; # description: \u0026quot;Description for Search\u0026quot; summary: \u0026quot;search\u0026quot; --- To hide a particular page from being searched, add it in post\u0026rsquo;s fron\u0026rsquo;t matter\n--- searchHidden: true ex: search.md\nSearch Page also has Key bindings:\nArrow keys to move up/down the list Enter key (return) or Right Arrow key to Go to highlighted page Escape key to clear searchbox and results For Multilingual use search.\u0026lt;lang\u0026gt;.md ex. search.es.md.\nNote: Search will work only on current language, user is currently on !\nCustomizing Fusejs Options\nRefer https://fusejs.io/api/options.html for Options, Add those as shown below.\nparams: fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026quot;title\u0026quot;, \u0026quot;permalink\u0026quot;, \u0026quot;summary\u0026quot;, \u0026quot;content\u0026quot;] Draft Page indication adds [draft] mark to indicate draft pages.\nPost Cover Image In post\u0026rsquo;s page-variables add :\ncover: image: \u0026quot;\u0026lt;image path/url\u0026gt;\u0026quot; # can also paste direct link from external site # ex. https://i.ibb.co/K0HVPBd/paper-mod-profilemode.png alt: \u0026quot;\u0026lt;alt text\u0026gt;\u0026quot; caption: \u0026quot;\u0026lt;text\u0026gt;\u0026quot; relative: false # To use relative path for cover image, used in hugo Page-bundles When you include images in the Page Bundle, multiple sizes of the image will automatically be provided using the HTML5 srcset field.\nTo reduce generation time and size of the site, you can disable this feature using\nparams: cover: responsiveImages: false To enable hyperlinks to the full image size on post pages, use\nparams: cover: linkFullImages: true Share Buttons on post Displays Share Buttons at Bottom of each post\nto show share buttons add\nparams: ShowShareButtons: true Show post reading time Displays Reading Time (the estimated time, in minutes, it takes to read the content.)\nTo show reading time add\nParams: ShowReadingTime: true Show Table of Contents (Toc) on blog post Displays ToC on blog-pages\nTo show ToC add following to page-variables\nShowToc: true To keep Toc Open by default on a post add following to page-variables:\nTocOpen: true BreadCrumb Navigation Adds BreadCrumb Navigation above Post\u0026rsquo;s Title to show subsections and Navigation to Home\nparams: ShowBreadCrumbs: true Can be diabled for particular page\u0026rsquo;s front-matter\n--- ShowBreadCrumbs: false --- Edit Link for Posts Add a button to suggest changes by using the file path of the post to link to a edit destination.\nFor site config use:\nParams: editPost: URL: \u0026quot;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026quot; Text: \u0026quot;Suggest Changes\u0026quot; # edit text appendFilePath: true # to append file path to Edit link Can be modified for individual pages\n--- editPost: URL: \u0026quot;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026quot; Text: \u0026quot;Suggest Changes\u0026quot; # edit text appendFilePath: true # to append file path to Edit link --- The example above would yield the following link for the post file posts/post-name.md: https://github.com/\u0026lt;path_to_repo\u0026gt;/content/posts/post-name.md\nParameter Required Default Value editPost.URL true - editPost.appendFilePath false false editPost.Text false \u0026ldquo;Edit\u0026rdquo; Since the link generated is a regular HTML anchor tag \u0026lt;a href=...\u0026gt;, you can also use other URL schemas like mailto://, e.g. URL: \u0026quot;mailto://mail@example.com?subject=Suggesting changes for \u0026quot;\nOther Posts suggestion below a post Adds a Previous / Next post suggestion under a single post\nparams: ShowPostNavLinks: true Multiple Authors To Use multiple authors for a post, in post-variables:\n--- author: [\u0026quot;Me\u0026quot;, \u0026quot;You\u0026quot;] --- To use Multiple Authors Site-wide, in config.yml:\nparams: author: [\u0026quot;Me\u0026quot;, \u0026quot;You\u0026quot;] Comments to add comments, create a html file\nlayouts/partials/comments.html\nand paste code provided by your comments provider\nalso in config add this\nparams: comments: true read more about this hugo-comments\nAccessKeys c - ToC Open/Close g - Go To Top h - Home (according to current lang) t - Theme toggle / - Jumps to search page if in menu What\u0026rsquo;s AccessKeys ?\nEnhanced SEO Enabled only when env: production\nRich Results/Snippets Support Twitter Cards Support The Twitter Cards metadata, except twitter:image should not require additional configuration, since it is generated from metadata that you should already have (for instance the page title and description). The twitter:image uses the Post Cover Image, if present. In the absence of a cover images, the first image from the images frontmatter (a list) is used. images: - image_01.png - image_02.png Finally, if neither of those are provided, twitter:image comes from the first Page Bundle image with feature in the name, with a fallback to the first image with cover or thumbnail in the name. OpenGraph support The OpenGraph metadata, except og:image should not require additional configuration, since it is generated from metadata that you should already have (for instance the page title and description). The og:image uses the Post Cover Image, if present. In the absence of a cover images, the first image from the images frontmatter (a list) is used. images: - image_01.png - image_02.png Finally, if neither of those are provided, og:image comes from the first Page Bundle image with feature in the name, with a fallback to the first image with cover or thumbnail in the name. For pages, you can also add audio (using frontmatter audio: filename.ext) and/or videos. videos: - filename01.mov - filename02.avi Multilingual Support Misc Scroll-Bar themed (by default) Smooth Scroll between in-page links (by default) Scroll-to-Top Button (by default) Displays a Scroll-to-Top button in right-bottom corner Google Analytics integration Syntax highlighting RSS feeds ","permalink":"https://st-saint.github.io/posts/papermod/papermod-features/","summary":"Learn About All Features in PaperMod","title":"Features"},{"content":" shell for loop 1 2 for it in $array; do done time 1 date \u0026#34;+%F %H:%M:%S.%N\u0026#34; copy to clipboard 1 echo \u0026#34;\u0026#34; | xclip -set clip sort options -k [n, m] 选择区间 -t g分隔符 -M 排序月份 -n 以数值型进行排序 -h 可读的数字(带单位) -f 忽略大小写 example tmux config 1 2 3 4 5 6 unbind C-b set-option -g prefix M-Space bind-key M-Space send-prefix set -g default-terminal screen-256color set-option -ga terminal-overrides \u0026#34;,*256col*:Tc\u0026#34; options start tmux new -s *SESSION_NAME* attach tmux a -t *SESSION_NAME* detach send-prefix d create window send-prefix c jobs list background process jobs environment condition 中括号 单中括号 [ ] 两个符号左右都要有空格分隔 内部操作符与操作变量之间要有空格：如 [ \u0026#34;a\u0026#34; = \u0026#34;b\u0026#34; ] 字符串比较中，\u0026gt; \u0026lt; 需要写成\u0026gt; \\\u0026lt; 进行转义 中字符串或者${}变量尽量使用\u0026#34;\u0026#34;双引号扩住，以避免值未定义引用而出错 中可以使用 –a –o 进行逻辑运算 是 shell 内置命令 双中括号 [[ ]] 两个符号左右都要有空格分隔 [[ ]] 内部操作符与操作变量之间要有空格：如 [[ \u0026#34;a\u0026#34; = \u0026#34;b\u0026#34; ]] [[ ]] 字符串比较中，可以直接使用 \u0026gt; \u0026lt; 无需转义 [[ ]] 中字符串或者${}变量尽量使用\u0026#34;\u0026#34; 双引号扩住，如未使用\u0026#34;\u0026#34;会进行模式和元字符匹配 [[ ]] 内部可以使用 \u0026amp;\u0026amp; || 进行逻辑运算 [[ ]] 是 bash keyword exist environment variable 1 2 if [[ -z ${env} ]]; then fi command 1 2 if ! command -v python \u0026amp;\u0026gt; /dev/null fi 文件夹或文件 文件夹 1 2 if [ ! -d \u0026#34;folder\u0026#34; ];then fi 文件 1 2 if [ ! -f \u0026#34;file\u0026#34; ];then fi find files 1 2 3 4 find ./fuzz-results/crashes -type f -name \u0026#34;id:$1*\u0026#34; -print0 | while read -d $\u0026#39;\\0\u0026#39; file do echo $file done xargs 多行转单行输入, 默认分隔符为换行\n1 pacman -Q | grep -i \u0026#34;haskell\u0026#34; | xargs sudo pacman -S --noconfirm placeholder\n1 2 xargs -I {} mv dir1/{} dir2/{} xargs -I \u0026#39;{}\u0026#39; mv dir1/\u0026#39;{}\u0026#39; dir2/\u0026#39;{}\u0026#39; stream symbol meanings 0 stdin 1 stdout 2 stderr 2\u0026gt;\u0026amp;1 stderr to stdout 1\u0026gt; stdout redirect 2\u0026gt; stderr redirect 1\u0026gt;/dev/null write to void uniq 仅输出 unique 行\n1 uniq -u grep \u0026amp; rg grep pacman 清除 sudo pacman -R $(pacman -Qdtq) zip zip -q 不显示命令 -r 递归 -y 不解析 symbol link 1 zip -qry zip_file.zip file1 file2 dir1 -d 1 unzip jacoco-0.8.7.zip -d jacoco tar 解压 1 tar -xzvf sample.tar.gz -C ./sample 压缩 1 tar -czf sample.tar.gz ./sample kernel dependencies 1 sudo apt-get install libncurses-dev gawk flex bison openssl libssl-dev dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf llvm network iw 格式 1 2 3 iw [ OPTIONS ] { help [ command ] | OBJECT COMMAND } OBJECT := { dev | phy | reg } OPTIONS := { --version | --debug } 搜索 1 iw dev \u0026lt;devname\u0026gt; scan 显示设备 1 iw dev 显示设备信息 1 iw dev \u0026lt;devename\u0026gt; info 显示连接信息 1 iw dev \u0026lt;devname\u0026gt; link 连接 1 2 iw dev \u0026lt;devname\u0026gt; connect [-w] \u0026lt;SSID\u0026gt; [\u0026lt;freq in MHz\u0026gt;] [\u0026lt;bssid\u0026gt;] [key 0:abcde d:1:6162636465] [mfp:req/opt/no] # Join the network with the given SSID (and frequency, BSSID). Network Manager 扫描 1 nmcli device wifi rescan 显示 1 nmcli device wifi list 连接 1 nmcli device wifi connect \u0026lt;SSID\u0026gt; password \u0026lt;password\u0026gt; [hidden yes] user management add user 连接到服务器 1 ssh root@10.105.250.92 创建用户 1 adduser example 添加 sudo 1 adduser example sudo ssh pem 生成密钥 1 2 3 sudo su example cd ~/.ssh ssh-keygen -t ed25519 -C \u0026#34;example@mail.com\u0026#34; 修改权限 1 2 3 cp ed25519.pub authorized_keys chmod 600 authorized_keys chmod 700 ~/.ssh 拷贝密钥 1 scp root@10.105.250.92:/home/example/.ssh/ed25519 ~/.ssh/ ","permalink":"https://st-saint.github.io/posts/linux/","summary":"linux manual","title":"Linux Cheat Sheet"},{"content":" Dockerfile Docker command run description 创建和启动一个新的容器实例 options exec description 已运行的容器中, 执行命令 options Option Description -i interaction -t terminal -w workspace ","permalink":"https://st-saint.github.io/posts/language/docker/","summary":"Docker","title":"Docker"},{"content":" clang-format语言: None, Cpp, Java, JavaScript, ObjC, Proto, TableGen, TextProto Language: Cpp # BasedOnStyle BasedOnStyle: LLVM # 访问说明符(public、private等)的偏移 AccessModifierOffset: -4 # 开括号(开圆括号、开尖括号、开方括号)后的对齐: Align, DontAlign, AlwaysBreak(总是在开括号后换行) AlignAfterOpenBracket: Align # 连续赋值时，对齐所有等号 AlignConsecutiveAssignments: true # 连续声明时，对齐所有声明的变量名 AlignConsecutiveDeclarations: true # 左对齐逃脱换行(使用反斜杠换行)的反斜杠 AlignEscapedNewlinesLeft: true # 水平对齐二元和三元表达式的操作数 AlignOperands: true # 对齐连续的尾随的注释 AlignTrailingComments: true # 允许函数声明的所有参数在放在下一行 AllowAllParametersOfDeclarationOnNextLine: true # 允许短的块放在同一行 AllowShortBlocksOnASingleLine: false # 允许短的case标签放在同一行 AllowShortCaseLabelsOnASingleLine: false # 允许短的函数放在同一行: None, InlineOnly(定义在类中), Empty(空函数), Inline(定义在类中，空函数), All AllowShortFunctionsOnASingleLine: Empty # 允许短的if语句保持在同一行 AllowShortIfStatementsOnASingleLine: false # 允许短的循环保持在同一行 AllowShortLoopsOnASingleLine: false # 总是在定义返回类型后换行(deprecated) AlwaysBreakAfterDefinitionReturnType: None # 总是在返回类型后换行: None, All, TopLevel(顶级函数，不包括在类中的函数), # AllDefinitions(所有的定义，不包括声明), TopLevelDefinitions(所有的顶级函数的定义) AlwaysBreakAfterReturnType: None # 总是在多行string字面量前换行 AlwaysBreakBeforeMultilineStrings: false # 总是在template声明后换行 AlwaysBreakTemplateDeclarations: false # false表示函数实参要么都在同一行，要么都各自一行 BinPackArguments: true # false表示所有形参要么都在同一行，要么都各自一行 BinPackParameters: true # 大括号换行，只有当BreakBeforeBraces设置为Custom时才有效 BraceWrapping: # class定义后面 AfterClass: false # 控制语句后面 AfterControlStatement: false # enum定义后面 AfterEnum: false # 函数定义后面 AfterFunction: false # 命名空间定义后面 AfterNamespace: false # ObjC定义后面 AfterObjCDeclaration: false # struct定义后面 AfterStruct: false # union定义后面 AfterUnion: false # catch之前 BeforeCatch: true # else之前 BeforeElse: true # 缩进大括号 IndentBraces: false # 在二元运算符前换行: None(在操作符后换行), NonAssignment(在非赋值的操作符前换行), All(在操作符前换行) BreakBeforeBinaryOperators: NonAssignment # 在大括号前换行: Attach(始终将大括号附加到周围的上下文), Linux(除函数、命名空间和类定义，与Attach类似), # Mozilla(除枚举、函数、记录定义，与Attach类似), Stroustrup(除函数定义、catch、else，与Attach类似), # Allman(总是在大括号前换行), GNU(总是在大括号前换行，并对于控制语句的大括号增加额外的缩进), WebKit(在函数前换行), Custom 如果不换行岂不是一直出屏幕外了？ # 注：这里认为语句块也属于函数 BreakBeforeBraces: Custom # 在三元运算符前换行 BreakBeforeTernaryOperators: true # 在构造函数的初始化列表的逗号前换行 BreakConstructorInitializersBeforeComma: false # 每行字符的限制, 0表示没有限制 ColumnLimit: 80 # 描述具有特殊意义的注释的正则表达式, 它不应该被分割为多行或以其它方式改变 CommentPragmas: \u0026#39;^ IWYU pragma:\u0026#39; # 构造函数的初始化列表要么都在同一行, 要么都各自一行 ConstructorInitializerAllOnOneLineOrOnePerLine: true # 构造函数的初始化列表的缩进宽度 ConstructorInitializerIndentWidth: 4 # 延续的行的缩进宽度 ContinuationIndentWidth: 4 # 去除C++11的列表初始化的大括号{后和}前的空格 Cpp11BracedListStyle: false # 继承最常用的指针和引用的对齐方式 DerivePointerAlignment: false # 关闭格式化 DisableFormat: false # 自动检测函数的调用和定义是否被格式为每行一个参数(Experimental) ExperimentalAutoDetectBinPacking: false # 需要被解读为foreach循环而不是函数调用的宏 ForEachMacros: [ foreach, Q_FOREACH, BOOST_FOREACH ] # 对 #include进行排序, 匹配了某正则表达式的 #include拥有对应的优先级, 匹配不到的则默认优先级为INT_MAX(优先级越小排序越靠前), # 可以定义负数优先级从而保证某些 #include永远在最前面 IncludeCategories: - Regex: \u0026#39;^\u0026#34;(llvm|llvm-c|clang|clang-c)/\u0026#39; Priority: 2 - Regex: \u0026#39;^(\u0026lt;|\u0026#34;(gtest|isl|json)/)\u0026#39; Priority: 3 - Regex: \u0026#39;.*\u0026#39; Priority: 1 # 缩进case标签 IndentCaseLabels: false # 缩进宽度 IndentWidth: 4 # 函数返回类型换行时, 缩进函数声明或函数定义的函数名 IndentWrappedFunctionNames: false # 保留在块开始处的空行 KeepEmptyLinesAtTheStartOfBlocks: true # 开始一个块的宏的正则表达式 MacroBlockBegin: \u0026#39;\u0026#39; # 结束一个块的宏的正则表达式 MacroBlockEnd: \u0026#39;\u0026#39; # 连续空行的最大数量 MaxEmptyLinesToKeep: 2 # 命名空间的缩进: None, Inner(缩进嵌套的命名空间中的内容), All NamespaceIndentation: Inner # 使用ObjC块时缩进宽度 ObjCBlockIndentWidth: 4 # 在ObjC的@property后添加一个空格 ObjCSpaceAfterProperty: false # 在ObjC的protocol列表前添加一个空格 ObjCSpaceBeforeProtocolList: true # 在call(后对函数调用换行的penalty PenaltyBreakBeforeFirstCallParameter: 19 # 在一个注释中引入换行的penalty PenaltyBreakComment: 300 # 第一次在 \u0026lt;\u0026lt; 前换行的penalty PenaltyBreakFirstLessLess: 120 # 在一个字符串字面量中引入换行的penalty PenaltyBreakString: 1000 # 对于每个在行字符数限制之外的字符的penalty PenaltyExcessCharacter: 1000000 # 将函数的返回类型放到它自己的行的penalty PenaltyReturnTypeOnItsOwnLine: 60 # 指针和引用的对齐: Left, Right, Middle PointerAlignment: Left # 允许重新排版注释 ReflowComments: true # 允许排序 #include SortIncludes: true # 在C风格类型转换后添加空格 SpaceAfterCStyleCast: false # 在赋值运算符之前添加空格 SpaceBeforeAssignmentOperators: true # 开圆括号之前添加一个空格: Never, ControlStatements, Always SpaceBeforeParens: ControlStatements # 在空的圆括号中添加空格 SpaceInEmptyParentheses: false # 在尾随的评论前添加的空格数(只适用于//) SpacesBeforeTrailingComments: 2 # 在尖括号的 \u0026lt; 后和 \u0026gt; 前添加空格 SpacesInAngles: true # 在容器(ObjC和JavaScript的数组和字典等)字面量中添加空格 SpacesInContainerLiterals: true # 在C风格类型转换的括号中添加空格 SpacesInCStyleCastParentheses: true # 在圆括号的(后和)前添加空格 SpacesInParentheses: true # 在方括号的[后和]前添加空格, lamda表达式和未指明大小的数组的声明不受影响 SpacesInSquareBrackets: false # 标准: Cpp03, Cpp11, Auto Standard: Cpp11 # tab宽度 TabWidth: 4 # 使用tab字符: Never, ForIndentation, ForContinuationAndIndentation, Always UseTab: Never ","permalink":"https://st-saint.github.io/posts/language/cc/","summary":"cc","title":"C - Cpp"},{"content":" git cli git branch git rev-parse --abbrev-ref HEAD git tags git describe --abbrev=0 --tags HEAD git hash git rev-parse HEAD clone single branch 1 git clone \u0026lt;url\u0026gt; --branch \u0026lt;branch/tag\u0026gt; --single-branch [\u0026lt;folder\u0026gt;] ","permalink":"https://st-saint.github.io/posts/language/git/","summary":"Git","title":"Git"},{"content":" String \u0026amp; Bytes bytes to string 1 return b\u0026#34;abc123\u0026#34;.decode(\u0026#34;utf-8\u0026#34;) abc123 string to bytes 1 return \u0026#34;abc123\u0026#34;.encode(\u0026#34;utf-8\u0026#34;) b\u0026#39;abc123\u0026#39; time 1 2 from time import gmtime, strftime return strftime(\u0026#34;%a, %d %b %Y %H:%M:%S +0000\u0026#34;, gmtime()) Mon, 19 Sep 2022 23:21:00 +0000 socket server 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # Echo server program import socket from time import gmtime, strftime HOST = \u0026#39;192.168.97.2\u0026#39; # Symbolic name meaning all available interfaces PORT = 50007 # Arbitrary non-privileged port with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s: s.bind((HOST, PORT)) s.listen(1) conn, addr = s.accept() with conn: print(\u0026#39;Connected by\u0026#39;, addr) while True: data = conn.recv(1024) print(strftime(\u0026#34;%a, %d %b %Y %H:%M:%S +0000\u0026#34;, gmtime()) + \u0026#34;receive: \u0026#34; + str(data)) if not data: break conn.sendall(data) client 1 2 3 4 5 6 7 8 9 10 11 12 13 # Echo client program import socket import time HOST = \u0026#39;192.168.97.2\u0026#39; # The remote host PORT = 50007 # The same port as used by the server with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s: s.connect((HOST, PORT)) while True: s.sendall(b\u0026#39;Hello, world\u0026#39;) data = s.recv(1024) print(\u0026#39;Received\u0026#39;, repr(data)) time.sleep(1) class super 理论上 super() 可以直接 call 嗷, 返回父类\n调用父类函数时候, self指向的是子类 多继承的时候, 直接 super().func() 会从 mro 中, 从第二个找拥有 func() 的类\n如果使用 super(clazz, self).func() 则会从 clazz.mro 中的第二个类开始找 ","permalink":"https://st-saint.github.io/posts/language/python/","summary":"Python","title":"Python"},{"content":" defun defun define function\n1 2 3 4 (defun function-name (args) (interactive \u0026#34;...\u0026#34;) ... ) interactive code: reference interactive 通过 interactive 可以把一个函数变成一个可交互的命令 interactive 的命令才可以通过 M-x 执行, 类似把这个函数对用户 public buffer \u0026amp; window get 可以通过 (get-buffer BUFFER_NAME) / (get-buffer-window 直接拿到 buffer / window 可以不存在的话是 nil switch window 的话可以用 ace-window 的 aw-switch-to-window WINDOW_NAME ","permalink":"https://st-saint.github.io/posts/emacs/elisp/","summary":"Elisp","title":"Elisp"},{"content":" Rules 轮胎 每场比赛至少使用两种轮胎 每个赛事周提供 5 种 13 套轮胎 干胎 UltraSoft, SuperSoft, Soft, Medium, Hard 赛时根据比赛场地提供三种干轮, 作为该场的 Soft, Medium, Hard 雨胎 Intermediate, Wet Theory Tyres 工作温度 越硬工作温度越高 Tyre blankets 可以提供大概 70℃ 理论上每种胎每圈速度差分别在 0.5s 和 0.8s, 但是具体赛道有差别 Tyres Temperature(℃) Hard 110 - 140 Middle 100 - 130 Soft 90 - 120 磨损 跟车时在弯道下压力不足打滑会增大磨损 Undercut \u0026amp; Overcut ref: Chain Bear: Triggering undercuts and stretching the tyre life - How Strategy shaped the French Grand Prix 通过一些进站策略拿到位置, 避免正面对抗 适用情况: 在对手身后, 落后 1 ~ 3 s, 不好直接进攻\n注意出站后是否在 free air Undercut 早进站, 靠新轮胎优势追进 pit delta (约25+-s) 对手如果进站会落在身后 Overcut 如果对手换新胎升温慢/难达到工作温度, 前几圈速度较慢 靠旧胎速度优势将对手拉开 pit delta 再进站, 出站后在对手身前 Techniques Overtake \u0026amp; Defense TC introduction TC(Traction Control) 可以帮助控制引擎输出功率, 防止打滑 也限制了输出功率, 以及一些需要轻微打滑的时候没有办法让轮胎打滑 本质上是 RPM 的问题 drive without TC 非常非常困难, 关了 TC 每次急了油门给大一点都是 spin throttle 过弯 apex 之后, 油门不要超过 1/2, 方向打正前不能全油门, 在回正方向过程中可以缓慢增大油门 感受轮胎/赛道抓地力动态调整出弯油门的极限 Throttle Linearity 设置成 50 左右可以有效防止加油过快 save the car 感觉到失去抓地力即将打滑的时候, 轻松油门, 快速反打方向, 并回正(或继续反打) short-shifting 出弯时, 不用等到转速达到上限才升档, 8000-10000 转即可升档 提前换档可以提前踩更多油门 低档位和雨天效果明显 ERS 在获得足够抓地力/方向盘回正全油门之前开 ERS 容易 spin kerbs 在路肩上加油门 非常 容易 spin ! on-throttle differential 开高速度更快但更容易 spin 轻微降低可以显著避免 spin reference https://www.youtube.com/watch?v=1SJXAanpEJ4 https://www.youtube.com/watch?v=pUuxiD-iNFg\u0026amp;t=1s Strategy stream settings ","permalink":"https://st-saint.github.io/posts/diary/f1/","summary":"F1 notebook","title":"F1"},{"content":" projectile 好像并不是所有常见项目都会被识别成 projectile , 所以根目录加一个空 .projectile 文件 ignore projectile ignore 依赖于 projectile-indexing-method projectile-indexing-method alien 直接使用外部index, projectile do nothing 效率最好 hybrid external tool + projectile filter 直接用 .projectile 声明 ignore 好像不总有效 .ignore 中写 exclude/include 会更好点(因为用的是 rg) native Emacs lisp indexing 很慢 issue balanced bracket 理论上 Emacs native 的 sexp 是可以直接匹配的, 但是好像 evil 下行为模式有些不一样 Key Function C-M-(f/b/n/p) supposed to be jumping to balanced bracket ","permalink":"https://st-saint.github.io/posts/emacs/doom/","summary":"Doom-Emacs","title":"Doom"},{"content":" Internet Network connection VPN v2ray \u0026amp; v2rayA proxy proxychains anonymous Tor Web browsers Chrome Communication Email gmail mu4e remote desktop Remote desktop servers TigerVNC NoMachine Remote desktop clients TigerVNC Anydesk Multimedia Image Image viewer geeqie Image processing Krita font editor fontforge Screenshot flameshot snipaste audio system alsamixer editor Audacity video player VLC Utilities Terminal Command shells fish (bash incompatible) zsh\nstarship Terminal Emulator alacritty vterm Files File Manager SpaceFM (severe problem: NO TRASH FOLDER) nemo Archive managers 7zip development Emacs doom emacs Text Input ibus ibus-rime System Task managers btop htop System log viewers journalctl Font Viewer NA Fonts awesome font SauceCodePro Nerd Font Mono Documents and texts Office freeoffice Readers and viewers pdfstudioviewer Security Password managers gpg Others Desktop environments Window Manager Xmonad Task Bar Xmobar System tray stalonetrayer trayer Wallpaper nitrogen Notification dunst Logout sddm ","permalink":"https://st-saint.github.io/posts/toolchain/","summary":"tools I am using","title":"ToolChain"},{"content":" class template template 是 compilation feature, cannot instantiate a template with dynamic class at runtime enum enum 默认是 String 用 enum.valueOf(str) convert to enum integer enum 1 2 3 4 5 6 7 8 9 10 public enum Type { SIGN_CREATE(0), SIGN_CREATE_BONUS(1), HOME_SCREEN(2), REGISTER_SCREEN(3); private final int value; Type(final int v){value = v;} public int getValue() { return value; } } 用 index 访问 Type.values()[index] Project classpath 访问 resources 也是需要在 classpath 中声明的 Serialize Gson Gson 应该是还比较好的方案了吧, 没有什么CVE问题 Process 阻塞 process 创建时默认重定向到 pipe, 如果主线程不及时读取 pipe 的内容, pipe buffer 会堵塞 format Conversion Argument Category Description \u0026#39;b\u0026#39;, \u0026#39;B\u0026#39; general If the argument arg is null, then the result is \u0026#34;false\u0026#34;. If arg is a boolean or Boolean, then the result is the string returned by String.valueOf(). Otherwise, the result is \u0026#34;true\u0026#34;. \u0026#39;h\u0026#39;, \u0026#39;H\u0026#39; general If the argument arg is null, then the result is \u0026#34;null\u0026#34;. Otherwise, the result is obtained by invoking Integer.toHexString(arg.hashCode()). \u0026#39;s\u0026#39;, \u0026#39;S\u0026#39; general If the argument arg is null, then the result is \u0026#34;null\u0026#34;. If arg implements Formattable, then arg.formatTo is invoked. Otherwise, the result is obtained by invoking arg.toString(). \u0026#39;c\u0026#39;, \u0026#39;C\u0026#39; character The result is a Unicode character \u0026#39;d\u0026#39; integral The result is formatted as a decimal integer \u0026#39;o\u0026#39; integral The result is formatted as an octal integer \u0026#39;x\u0026#39;, \u0026#39;X\u0026#39; integral The result is formatted as a hexadecimal integer \u0026#39;e\u0026#39;, \u0026#39;E\u0026#39; floating point The result is formatted as a decimal number in computerized scientific notation \u0026#39;f\u0026#39; floating point The result is formatted as a decimal number \u0026#39;g\u0026#39;, \u0026#39;G\u0026#39; floating point The result is formatted using computerized scientific notation or decimal format, depending on the precision and the value after rounding. \u0026#39;a\u0026#39;, \u0026#39;A\u0026#39; floating point The result is formatted as a hexadecimal floating-point number with a significand and an exponent \u0026#39;t\u0026#39;, \u0026#39;T\u0026#39; date/time Prefix for date and time conversion characters. See Date/Time Conversions. \u0026#39;%\u0026#39; percent The result is a literal \u0026#39;%\u0026#39; (\u0026#39;\\u0025\u0026#39;) \u0026#39;n\u0026#39; line separator The result is the platform-specific line separator date format 1 2 3 4 5 6 7 8 import java.text.DateFormat; import java.text.SimpleDateFormat; import org.apache.commons.lang3.time.DurationFormatUtils; DateFormat formatter = new SimpleDateFormat(\u0026#34;yyyy-MM-dd HH:mm:ss.SSS\u0026#34;); System.out.println(formatter.format(System.currentTimeMillis())); DurationFormatUtils.formatDuration(millis, \u0026#34;HH:mm:ss.SSS\u0026#34;) 2022-04-18 20:53:33.000538 iterator iterator and remove 1 2 3 4 5 6 for(Iterator\u0026lt;Map.Entry\u0026lt;String, String\u0026gt;\u0026gt; it = map.entrySet().iterator(); it.hasNext(); ) { Map.Entry\u0026lt;String, String\u0026gt; entry = it.next(); if(entry.getKey().equals(\u0026#34;\u0026#34;)) { it.remove(); } } File Path 一般直接用 Path 处理路径 Path.toFile() 直接转 File join 1 2 3 Path currentPath = Paths.get(System.getProperty(\u0026#34;user.dir\u0026#34;)); Path filePath = Paths.get(currentPath.toString(), \u0026#34;data\u0026#34;, \u0026#34;foo.txt\u0026#34;); System.out.println(filePath.toString()); list file 1 File[] files = new File(\u0026#34;/home\u0026#34;).listFiles(); copy\u0026amp;move move Option\nREPLACE_EXISTING ATOMIC_MOVE 1 Files.move(Paths.get(src), Paths.get(dest), null); copy 1 Files.copy(Paths.get(src), Paths.get(dest), null); Write to File BufferedWriter 写 String 1 2 3 4 String str = \u0026#34;Hello\u0026#34;; BufferedWriter writer = new BufferedWriter(new FileWriter(fileName)); writer.write(str); writer.close(); FileOutputStream 写 bytes 1 2 3 4 5 String str = \u0026#34;Hello\u0026#34;; FileOutputStream outputStream = new FileOutputStream(fileName); byte[] strToBytes = str.getBytes(); outputStream.write(strToBytes); outputStream.close(); Reflect from class 1 2 3 4 5 6 7 8 9 10 Field[] allFields = Person.class.getDeclaredFields(); assertEquals(2, allFields.length); assertTrue(Arrays.stream(allFields).anyMatch(field -\u0026gt; field.getName().equals(LAST_NAME_FIELD) \u0026amp;\u0026amp; field.getType().equals(String.class))); assertTrue(Arrays.stream(allFields).anyMatch(field -\u0026gt; field.getName().equals(FIRST_NAME_FIELD) \u0026amp;\u0026amp; field.getType().equals(String.class))); Object copy deep-copy problem A common solution to the deep copy problem is to use Java Object Serialization (JOS). Unfortunately, this approach has some problems, too:\nIt will only work when the object being copied, as well as all of the other objects references directly or indirectly by the object, are serializable. (In other words, they must implement java.io.Serializable.) Fortunately it is often sufficient to simply declare that a given class implements java.io.Serializable and let Java’s default serialization mechanisms do their thing. Java Object Serialization is slow, and using it to make a deep copy requires both serializing and deserializing. There are ways to speed it up (e.g., by pre-computing serial version ids and defining custom readObject() and writeObject() methods), but this will usually be the primary bottleneck. The byte array stream implementations included in the java.io package are designed to be general enough to perform reasonable well for data of different sizes and to be safe to use in a multi-threaded environment. These characteristics, however, slow down ByteArrayOutputStream and (to a lesser extent) ByteArrayInputStream. ","permalink":"https://st-saint.github.io/posts/language/java/","summary":"Java","title":"Java"},{"content":" recursion PERL, PERC 中 有类似 \\g\u0026lt;n\u0026gt; \\g{n} 的 backreference constructs 用来标识第 n 个 group 的正则式 java.util.regex 不支持 backreference constructs 也没有 Maven Repository 支持 backreference constructs\n浪费了我一天时间 ","permalink":"https://st-saint.github.io/posts/language/regex/","summary":"something in regex","title":"Regex"},{"content":" emacs-calculator 逆波兰表示法. 栈垂直向下生长. 类型 模数 mod 复数 (-1, 2) -\u0026gt; -1 + 2i 分数 numerator:denominator 会自动约分 基数 输入 radix#exp 向量 [4, 1, 5] [ [ 1, 2, 3 ] [ 4, 5, 6 ] [ 6, 7, 8 ] ] 代数表达式 以 \u0026#39; 开头输入 a^3 + a^2 b / c d - a / b \u0026#34;big language\u0026#34; 使用 evaluates-to 赋值 2 3 b a a 1: a + ---- - - c d b 图形 gnuplot HMS 表示时间角度 1: 7@ 55\u0026#39; 13\u0026#34; -\u0026gt; 7h 55m 13s 时间 1: \u0026lt;6:59:34pm Tue Jun 23, 2009\u0026gt; 输入的数字会作为天来看待 shortcut Key Function Q Sqrt p set precision BACKSPACE pop/delete D r change radix display U c unit conversion a x calc expand a s calc simplify a d derivative a i integral ","permalink":"https://st-saint.github.io/posts/emacs/calc/","summary":"Emacs Calculator!","title":"Calc"},{"content":" Keymap Keymap Function C-M-f forward-sexp (coresponding bracket) C-M-b backward-sexp (coresponding bracket) align 第一次知道 C-u M-x 调用的命令跟直接 M-x 调用的还是不一样的 C-u M-x align-regexp 使用的是更高级的 align-regexp\nregexp: match the place you are interested in aligning; to do it, one of its parenthesis groups will be extended with spaces, or shortened by deleting characters parenthesis group: choose which one spacing: if the group is shorter than this, spaces will be added to it; if it\u0026#39;s longer, characters will be deleted from it, starting at the end (unless it\u0026#39;s longer for the purposes of alignment, of course) repeat: well, this is obvious, I think justify: non-blank characters inside the group won\u0026#39;t be deleted, and necessary spaces will be added/deleted from the left. On your second case, try: regexp \\([0-9]+\\), group -1. column (instead of spacing): align to that fixed column (of course, it doesn\u0026#39;t work well with “repeat”). GPG keeping your secrets encrypted on your file system is an easy way of keeping your secrets secret\nGpg(GNU Privacy Guard) is natively supported in emacs called EasyPG 只用一个gpg key管理所有加密文件和链接 可以不用每次输密码获取 root 权限 authinfo auth-sources 变量指定 authinfo 文件 格式 machine \u0026lt;HOST\u0026gt; login \u0026lt;ACCOUNT\u0026gt; port \u0026lt;PORT\u0026gt; password \u0026lt;PASSWORD\u0026gt;\nexample machine localhost login root port sudo password rootpasswd123 shell access gpg2 -q --for-your-eyes-only --no-tty -d ~/.authinfo.gpg | sed -n \u0026#39;s,^machine gmail.com .*password \\([^ ]*\\).*,\\1,p\u0026#39; Creating a key gpg --gen-key cache password debug M-x debug-on-entry 设置入口 直接运行函数 keymap Shortcut Function d step through c continue(step out) ","permalink":"https://st-saint.github.io/posts/emacs/native/","summary":"Native Emacs Manuals","title":"Native Emacs"},{"content":" calfw A calendar framework for Emacs org-gcal - Synchronization with google calenda 老项目不维护了, 新地址 org-gcal google cloud calendar could api 改版了真的好难用, 文档给的也过时了 还是勉勉强强按文档同步了, project 测试版就可以用 sync 直接 org-ical-sync 就可以fetch，但是怎么push呢 在 org-heading 上 call org-gcal-post-at-point 加个 properties, schedule 也会被写到 properties, 感觉差不多能用 有个小问题是，sync一次之后，老是出现 rx--translate-bounded-repetition: rx ‘**’ range error auto archive auto archive g 了，sync的 rx \u0026#39;**\u0026#39; range error 是auto archive来的 PR 还没 merge了 , 先disable掉吧 ","permalink":"https://st-saint.github.io/posts/emacs/calendar/","summary":"Emacs Calendar \u0026amp; Google Calendar","title":"Calendar"},{"content":" 一般都说 hashmap 复杂度O(1), 感觉应该不完全是 研究一下 Werid things 容易想到如果有无限大数组, 直接当作桶对 object 取 hash, 期望不会 collide 就行 显然没有无限大内存，怎么做 index Java implement 实现是 hash_array (length: n to the pow of 2) 处理 collision\nlinkedlist R-B tree Index index map 的话, length 是 2 的幂次, hash 值直接取后n位, 作为 array 的 index\n有人说是高位和低位异或的, 听起来更有道理, 之后看看源码 array 小还是比较容易碰撞的, 元素多了就扩容 Resize when 有个 loadFactor , 估计是说 array 的 density 高了 or 碰撞太多就 resize, 之后看看源码 how double length 之后 array 都得遍历一下吧,\nlist 直接重新算index插入 BR tree 转回两个 list, 再重新计算要不要转成RB tree upper bound 好像是 2^30, 还蛮大的, 不知道内存会占多少G TODO Source code review Summary 显然查询是乐观估计的O(1), 最差是O(log_n), 不过应该是达不到最差, resize得当的话应该一直接近O(1) 添加删除需要重构, 假设元素个数等于数组长度就扩容, 迭代元素的复杂度均摊是O(2n)\n不过RB tree建树是O(n*log_n)的, 碰撞率是 v 的话, 这一部分的复杂度差不多是O(nv*log_nv), 介于 v 太小所以也可以近似忽略吧 总的来说 hash + resize 算法好的话, 碰撞率太低了, 还是可以认为 hashmap 复杂度是近似O(1)的 ","permalink":"https://st-saint.github.io/posts/diary/hashmap/","summary":"一般都说 hashmap 复杂度O(1), 感觉应该不完全是 研究一下 Werid things 容易想到如果有无限大数组, 直接当作桶对 object 取 hash, 期望不会 collide 就行 显然没有无限大内存，怎么做 index Java implement 实现是 hash_array (length: n to the pow of 2) 处理 collision\nlinkedlist R-B tree Index index map 的话, length 是 2 的幂次, hash 值直接取后n位, 作为 array 的 index\n有人说是高位和低位异或的, 听起来更有道理, 之后看看源码 array 小还是比较容易碰撞的, 元素多了就扩容 Resize when 有个 loadFactor , 估计是说 array 的 density 高了 or 碰撞太多就 resize, 之后看看源码 how double length 之后 array 都得遍历一下吧,","title":"Hashmap"},{"content":" WX的十宗罪 说实话啊， wx真nmd不是个人啊 战犯日志 \u0026lt;2023-01-20 Fri\u0026gt; windows wx一天闪退 10 次 \u0026lt;2022-02-08 Tue\u0026gt; 零钱提现银行卡10金币一个nt免费券 \u0026lt;2022-02-09 Wed\u0026gt; windows 登录一次, 回 linux 就 nml 太长时间未登录，切一次登录一次, 玩nm \u0026lt;2022-02-21 Mon\u0026gt; 语音12个小时就必断一次是吧，sbnt 能不能把你tmlgb的文件存好啊 一周前发的照片就打不开 一个月前发的文件就已过期 ntmlgdb腾讯云是不是不是你们家的啊，还是ntmd的wx不是腾讯产品? 文件存储做不到，出个会员绑定个腾讯云服务也做不到？ 纯jbnt pyq 朋友圈朋的是个jb啊，发个pyq永远不能编辑，发错就要删，发错就要删，删nmlgcb，不如直接把nm删了 ","permalink":"https://st-saint.github.io/posts/diary/wechat/","summary":"说实话嗷，wx真不是个人啊","title":"Wechat"},{"content":" org 理论上原生支持org, 好像直接解释为markdown了 分割线\n需要5个 dash - Front matter 是个啥呢\n#+__property__: __value__ 这样设置一些属性 example 1 2 3 4 #+date: Fri, 28 Jan 2022 23:05:33 +0800 #+summary: hugo things #+tags[]: tagA tagB #+categories[] catA catB front matter 得有 date 才能识别到 archive 里面 TOC ORG 的 TOC 好像有点问题 不过是根据 theme 来的，所以应该还好 \u0026lt;2022-02-23 Wed\u0026gt; UPDATE toc 直接 {{ .TableofContents }} 就可以生成 使用不同主题 hugo 并不支持在一个site中使用多个theme Solution 在不同子路径下创建多个仓库生成不同站点，生成到同一个public目录下 css 与theme相关 一般直接在assets/ 想给 \u0026lt;h1\u0026gt; 前加个 \u0026lt;hr\u0026gt; 加不上.. font 不是很好看 准备换一下 header 也改一下 找不到好看字体摆烂了，直接 system ui 换上 sauce code pro + dejavu 了 DateFormat 折磨 又 debug 一晚上, hugo 不会 build 超过当前日期的时间, 且 Hugo 默认采用的是格林尼治标准时间, 所以默认 8h 内的文章不会显示\n强制 build 未来文章: hugo --buildFuture / buildFuture = true 用识别时区的格式 Sat, 12 Mar 2022 23:43:48 +0800 文章 date 字段需要是以下格式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 const ( Layout = \u0026#34;01/02 03:04:05PM \u0026#39;06 -0700\u0026#34; // The reference time, in numerical order. ANSIC = \u0026#34;Mon Jan _2 15:04:05 2006\u0026#34; UnixDate = \u0026#34;Mon Jan _2 15:04:05 MST 2006\u0026#34; RubyDate = \u0026#34;Mon Jan 02 15:04:05 -0700 2006\u0026#34; RFC822 = \u0026#34;02 Jan 06 15:04 MST\u0026#34; RFC822Z = \u0026#34;02 Jan 06 15:04 -0700\u0026#34; // RFC822 with numeric zone RFC850 = \u0026#34;Monday, 02-Jan-06 15:04:05 MST\u0026#34; RFC1123 = \u0026#34;Mon, 02 Jan 2006 15:04:05 MST\u0026#34; RFC1123Z = \u0026#34;Mon, 02 Jan 2006 15:04:05 -0700\u0026#34; // RFC1123 with numeric zone RFC3339 = \u0026#34;2006-01-02T15:04:05Z07:00\u0026#34; RFC3339Nano = \u0026#34;2006-01-02T15:04:05.999999999Z07:00\u0026#34; Kitchen = \u0026#34;3:04PM\u0026#34; // Handy time stamps. Stamp = \u0026#34;Jan _2 15:04:05\u0026#34; StampMilli = \u0026#34;Jan _2 15:04:05.000\u0026#34; StampMicro = \u0026#34;Jan _2 15:04:05.000000\u0026#34; StampNano = \u0026#34;Jan _2 15:04:05.000000000\u0026#34; ) 在 config.yaml 中可以设置 DateFormat, format 格式为\nexample: DateFormat: \u0026#34;Jan 02, 2006 Mon 15:04\u0026#34; Format Symbol Description Value Monday A full textual representation of the day of the week Monday through Sunday Mon A textual representation of a day, three letters Mon through Sun 2006 A full numeric representation of a year, 4 digits 2017 or 1986 06 A two digit representation of a year 17 or 86 January A full textual representation of a month, such as January or March January through December Jan A short textual representation of a month, three letters January through December 01 Numeric representation of a month, with leading zeros 01 through 12 1 Numeric representation of a month, without leading zeros 1 through 12 02 Day of the month, 2 digits with leading zeros 01 through 31 15 24-hour format of an hour with leading zeros 00 through 24 3 12-hour format of an hour without leading zeros 1 through 12 03 12-hour format of an hour with leading zeros 01 through 12 PM Indicator if AM or PM AM or PM 4 Minutes without leading zeros 1 through 59 04 Minutes with leading zeros 01 through 59 5 Seconds, without leading zeros 1 through 59 05 Seconds, with leading zeros 01 through 59 MST Timezone Example: UTC, MST -0700 Difference to GMT as ±hhmm +0000 -07:00 Difference to GMT as ±hh:mm +00:00 -07 Difference to GMT as ±hh +00 Z0700 Difference to GMT as Z or ±hhmm Z or ±hhmm Z07:00 Difference to GMT as Z or ±hh:mm Z or ±hh:mm Z07 Difference to GMT as Z or ±hh Z or ±hh ","permalink":"https://st-saint.github.io/posts/hugo/","summary":"hugo things","title":"Hugo"}]