#+TITLE: Elisp
#+date: Thu Mar 31 16:53:37 CST 2022
#+categories[]: emacs
#+tags[]: emacs
#+summary: Elisp

* equal

** eq
#+begin_src elisp
(eq 'foo 'foo)
;  ⇒ t


(eq ?A ?A)
;; ⇒ t


(eq 3.0 3.0)
;; ⇒ nil
;; Equal floats may or may not be the same object.

(eq "asdf" "asdf")
;; ⇒ nil

(eq [(1 2) 3] [(1 2) 3])
;; ⇒ nil

(eq (point-marker) (point-marker))
;; ⇒ nil
#+end_src


** equal
#+begin_src elisp
(equal "asdf" "asdf")
;; ⇒ t


(equal [(1 2) 3] [(1 2) 3])
;; ⇒ t


(equal (point-marker) (point-marker))
;; ⇒ t
#+end_src


* defun
+ =defun= define function
    #+begin_src emacs-lisp :tangle yes
(defun function-name (args)
  (interactive "...")
  ...
  )
#+end_src
+ interactive code: [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Interactive-Codes.html][reference]]

** interactive
+ 通过 interactive 可以把一个函数变成一个可交互的命令
+ interactive 的命令才可以通过 M-x 执行, 类似把这个函数对用户 public

* file

** get parent directory
#+begin_src emacs-lisp
(file-name-directory buffer-file-name)
#+end_src

** file name without suffix
#+begin_src emacs-lisp
(file-name-sans-extension (buffer-name))
#+end_src


* buffer & window
** get
+ 可以通过 =(get-buffer BUFFER_NAME)= / =(get-buffer-window= 直接拿到 =buffer= / =window=
+ 可以不存在的话是 *nil*
** switch
+ window 的话可以用 *ace-window* 的 =aw-switch-to-window WINDOW_NAME=
